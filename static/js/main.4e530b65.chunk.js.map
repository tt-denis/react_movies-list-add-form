{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","titleError","setTitleError","descriptionError","setDescriptionError","imgUrlError","setImgUrlError","ImdbUrlError","setImdbUrlError","imdbIdError","setImdbIdError","onSubmit","event","preventDefault","type","id","name","value","placeholder","onChange","target","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e530b65.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const [titleError, setTitleError] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(false);\n  const [imgUrlError, setImgUrlError] = useState(false);\n  const [ImdbUrlError, setImdbUrlError] = useState(false);\n  const [imdbIdError, setImdbIdError] = useState(false);\n\n  const checkErrors = () => {\n    setTitleError(!title);\n    setDescriptionError(!description);\n    setImgUrlError(!imgUrl);\n    setImdbUrlError(!imdbUrl);\n    setImdbIdError(!imdbId);\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    checkErrors();\n    if (title && description && imgUrl && imdbUrl && imdbId) {\n      onAdd({\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      });\n\n      clearForm();\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"addTitle\">\n        Add movies\n      </h1>\n      <form\n        className=\"addForm\"\n        onSubmit={onSubmit}\n      >\n        <input\n          className={titleError ? 'error' : ''}\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          value={title}\n          placeholder=\"Title\"\n          onChange={(event) => {\n            setTitle(event.target.value);\n            setTitleError(false);\n          }}\n        />\n        <input\n          className={descriptionError ? 'error' : ''}\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          value={description}\n          placeholder=\"Description\"\n          onChange={(event) => {\n            setDescription(event.target.value);\n            setDescriptionError(false);\n          }}\n        />\n        <input\n          className={imgUrlError ? 'error' : ''}\n          type=\"text\"\n          id=\"imgUrl\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          placeholder=\"Img Url\"\n          onChange={(event) => {\n            setImgUrl(event.target.value);\n            setImdbUrlError(false);\n          }}\n        />\n        <input\n          className={ImdbUrlError ? 'error' : ''}\n          type=\"text\"\n          id=\"imdbUrl\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          placeholder=\"Imdb Url\"\n          onChange={(event) => {\n            setImdbUrl(event.target.value);\n            setImdbIdError(false);\n          }}\n        />\n        <input\n          className={imdbIdError ? 'error' : ''}\n          type=\"text\"\n          id=\"imdbId\"\n          name=\"imdbId\"\n          value={imdbId}\n          placeholder=\"Imdb Id\"\n          onChange={(event) => {\n            setImdbId(event.target.value);\n            setImdbIdError(false);\n          }}\n        />\n        <button type=\"submit\">\n          Add\n        </button>\n\n      </form>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}